---
version: 2
plan:
  project-key: STC
  key: STC2
  name: SC_CICD_TRACK2
  description: Sitecore Pipeline Track 2
stages:
- Build and Package:
    manual: false
    final: false
    jobs:
    - Build
- Deploy to DEV:
    manual: false
    final: false
    jobs:
    - Deploy to DEV
- Deploy to QA:
    manual: true
    final: false
    jobs:
    - Deploy to QA
- Deploy to UAT CM:
    manual: true
    final: false
    jobs:
    - Deploy to UAT CM
- Deploy to UAT CD1:
    manual: true
    final: false
    jobs:
    - Deploy to UAT CD1
- Deploy to UAT CD2:
    manual: true
    final: false
    jobs:
    - Deploy to UAT CD2
- Deploy to Prod CM:
    manual: true
    final: false
    jobs:
    - Deploy to CM
- Deploy to Prod CD1:
    manual: true
    final: false
    jobs:
    - Deploy to CD1
- Deploy to Prod CD2:
    manual: true
    final: false
    jobs:
    - Deploy to CD2
Build:
  key: JOB1
  tasks:
  - clean
  - any-task:
      plugin-key: com.atlassian.bamboo.plugins.bamboo-variable-inject-plugin:dump
      configuration: {}
  - any-task:
      plugin-key: com.stellarity.bamboo.powershell-task:powerShellTask
      configuration:
        psLocation: FILE
        psLoadProfile: DEFAULT
        psBitness: ANY
        psFile: devops/sitecore-preflight.ps1
      description: Pre-flight script
  - inject-variables:
      file: inject.config
      scope: RESULT
      namespace: inject
  - any-task:
      plugin-key: com.atlassian.bamboo.plugins.bamboo-variable-inject-plugin:dump
      configuration: {}
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          equals:
            planRepository.branchName: master
      description: Stop if branch is Master
  - any-task:
      plugin-key: ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildbegintask
      configuration:
        chosenSonarConfigId: '1'
        sonarServerSelection: fromServerConfig
        sonarMainBranch: master
        sonarProjectName: medprositecore
        sonarPullRequestAnalysis: 'true'
        overrideSonarLoginVariable: ANYPOINT_PASSWORD
        incrementalNoPullRequest: incrementalModeFailBuildField
        executable: SonarScanMSBuild
        illegalBranchCharsReplacement: '-'
        sonarEditionSelection: COMMERCIAL_EDITION
        failBuildForTaskErrors: 'true'
        incrementalModeNotPossible: incrementalModeRunFullAnalysis
        additionalProperties: /d:sonar.login=${bamboo.sonarProdTokenPassword}
        autoBranch: 'true'
        sonarProjectKey: STC:medprositecore
      description: Build Sonar Analysis
  - any-task:
      plugin-key: com.atlassian.bamboo.plugin.dotnet:msbuild
      configuration:
        solution: ${bamboo.build.working.directory}/Sitecore/MedProSC.sln
        options: /nologo /p:TargetFrameworkVersion=${bamboo.TargetFrameworkVersion} /p:RestorePackagesConfig=true /p:Configuration=Release  /t:Clean,Build -restore /p:RestoreSources=https://nexus.medpro.com/nexus/repository/nuget.org-proxy/index.json
        label: msbuild CLI
  - any-task:
      plugin-key: ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildendtask
      configuration:
        chosenSonarConfigId: '1'
        sonarServerSelection: fromServerConfig
        sonarMainBranch: master
        buildJdk: JDK 17
        sonarPullRequestAnalysis: 'true'
        overrideSonarLoginVariable: ANYPOINT_PASSWORD
        incrementalNoPullRequest: incrementalModeFailBuildField
        executable: SonarScanMSBuild
        illegalBranchCharsReplacement: '-'
        sonarEditionSelection: COMMERCIAL_EDITION
        failBuildForTaskErrors: 'true'
        incrementalModeNotPossible: incrementalModeRunFullAnalysis
        autoBranch: 'true'
      description: End Sonar Analysis
  - command:
      executable: Python_3
      argument: ${bamboo.capability.WorkPath}/Sonar/set_pr_decoration.py "-uSVC_ProdSonarQube" "-p${bamboo.sonarServerPRODPassword}" "-jSTC:medprositecore" "-rSTC" "-smedprositecore" "-ePROD"
      description: PR Decoration
  - any-task:
      plugin-key: com.stellarity.bamboo.powershell-task:powerShellTask
      configuration:
        psLocation: BODY
        psBody: |
          write-host "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
          write-host "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Build-StoryBook=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-"
          write-host "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
          write-host "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-NPM Install=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-"
          npm install
          write-host "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Build-Storybook=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-"
          npm run build-storybook
        psLoadProfile: DEFAULT
        psBitness: ANY
        psSubdirectory: Sitecore/src/Theme/MedProDotCom
      description: Build Storybook
  - command:
      executable: nuget CLI
      argument: pack nuget.nuspec -ExcludeEmptyDirectories -NonInteractive -Properties "MedProSitecore=${bamboo.build.working.directory}\Sitecore;NoWarn=NU5100,NU5119" ${bamboo.inject.nuget_extra_args}
      working-dir: Sitecore/nuget
      description: Sitecore Code Nuget Pack
  - command:
      executable: nuget CLI
      argument: pack Storybook.nuspec -ExcludeEmptyDirectories -NonInteractive -Properties "MedProSitecore=${bamboo.build.working.directory}\Sitecore;NoWarn=NU5100,NU5119" ${bamboo.inject.nuget_extra_args}
      working-dir: Sitecore/nuget/storybook
      description: Storybook nuget
  - command:
      executable: nuget CLI
      argument: pack Serialization.nuspec -ExcludeEmptyDirectories -NonInteractive -Properties "MedProSitecore=${bamboo.build.working.directory}\Sitecore;NoWarn=NU5100,NU5119" ${bamboo.inject.nuget_extra_args}
      working-dir: Sitecore/nuget/serialization
      description: Serialization Nuget Pack
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          equals:
            bamboo.inject.stop_deploy: 'true'
      description: Stop build based on pre-flight script
  - command:
      executable: Python_3
      argument: ${bamboo.capability.WorkPath}/tower/tower_launch.py --template devops-artifactory-delete-repo-files --url ${bamboo.tower_url} --wait_for_job true
      environment: TOWER_PAYLOAD=${bamboo.tower_api_payload_art_del} TOWER_API_TOKEN=${bamboo.AnsibleAPITokenSecret}
      conditions:
      - variable:
          matches:
            delete_prior_release: (?i)true
      description: Delete Artifactory nuget release
  - any-task:
      plugin-key: org.jfrog.bamboo.bamboo-artifactory-plugin:artifactoryNugetTask
      configuration: {}
      description: Nuget push build artifacts
  - any-task:
      plugin-key: org.jfrog.bamboo.bamboo-artifactory-plugin:artifactoryPublishBuildInfoTask
      configuration: {}
      description: Publish Build info
  final-tasks:
  - command:
      executable: Python_3
      argument: ${bamboo.capability.WorkPath}/tower/tower_launch.py --template devops-bamboo_trigger_plan --url ${bamboo.tower_url}
      environment: TOWER_PAYLOAD=${bamboo.tower_api_payload} TOWER_API_TOKEN=${bamboo.AnsibleAPITokenSecret}
      description: Launch metrics plan via Tower
  artifacts:
  - name: Sitecore Code Nuget
    location: Sitecore/nuget
    pattern: '*.nupkg'
    shared: true
    required: true
  - name: Sitecore Serialization Nuget
    location: Sitecore/nuget/serialization
    pattern: '*.nupkg'
    shared: true
    required: false
  - name: Sitecore Storybook nuget
    location: Sitecore/nuget/storybook
    pattern: '*.nupkg'
    shared: true
    required: false
  requirements:
  - system.builder.command.msbuild CLI
  - OS: Windows
  artifact-subscriptions: []
Deploy to DEV:
  key: DEV
  tasks:
  - clean
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          equals:
            bamboo.inject.stop_deploy: 'true'
      description: Stop build based on pre-flight script
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          matches:
            planRepository.branchName: ^release.*$
      description: Stop deploy if branch is release*
  - any-task:
      plugin-key: com.atlassian.bamboo.plugins.bamboo-variable-inject-plugin:dump
      configuration: {}
  - any-task:
      plugin-key: com.stellarity.bamboo.powershell-task:powerShellTask
      configuration:
        psLocation: BODY
        psBody: "write-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\"\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Serialization=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\"\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Restore=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet tool restore\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-new-tool=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet new tool-manifest\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Install & Login=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet nuget list source \ndotnet tool install Sitecore.CLI --add-source https://nexus.medpro.com/nexus/repository/Sitecore_MyGet_Nuget_Proxy/index.json\ndotnet sitecore init \ndotnet sitecore login --authority ${bamboo.T2_DEV_serialization_authority} --cm ${bamboo.T2_DEV_serialization_cm} --allow-write true --client-credentials true --client-id ${bamboo.T2_DEV_serialization_clientid} --client-secret ${bamboo.T2_DEV_serialization_secret}\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Push=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet sitecore ser push \ndotnet sitecore ser validate --fix\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Publish=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet sitecore publish \nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\"\n"
        psLoadProfile: DEFAULT
        psBitness: ANY
        psSubdirectory: Sitecore
      description: Serialization
  - command:
      executable: Ansible_Playbook
      argument: devops/Ansible/init_deploy.yml  --limit=${bamboo.T2_DEV_Server}, -i devops/Ansible/inventory --extra-vars "ansible_password=${bamboo.ansible_password}" --extra-vars "tower_token=${bamboo.AnsibleAPITokenSecret}"
      environment: bamboo_deploy_env=${bamboo.T2_DEV_Deploy_Env}
      description: Ansible Deploy script
  final-tasks:
  - command:
      executable: Python_3
      argument: ${bamboo.capability.WorkPath}/tower/tower_launch.py --template devops-bamboo_trigger_plan --url ${bamboo.tower_url}
      environment: TOWER_PAYLOAD=${bamboo.tower_api_payload} TOWER_API_TOKEN=${bamboo.AnsibleAPITokenSecret}
      description: Launch metrics plan via Tower
  requirements:
  - OS: Linux
  artifact-subscriptions:
  - artifact: Sitecore Code Nuget
    destination: deploy
  - artifact: Sitecore Storybook nuget
    destination: deploy
Deploy to QA:
  key: QA
  tasks:
  - clean
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          equals:
            bamboo.inject.stop_deploy: 'true'
      description: Stop build based on pre-flight script
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          matches:
            planRepository.branchName: ^release.*$
      description: Stop deploy if branch is release*
  - any-task:
      plugin-key: com.atlassian.bamboo.plugins.bamboo-variable-inject-plugin:dump
      configuration: {}
  - any-task:
      plugin-key: com.stellarity.bamboo.powershell-task:powerShellTask
      configuration:
        psLocation: BODY
        psBody: "write-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\"\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Serialization=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\"\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Restore=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet tool restore\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-new-tool=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet new tool-manifest\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Install & Login=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet nuget list source \ndotnet tool install Sitecore.CLI --add-source https://nexus.medpro.com/nexus/repository/Sitecore_MyGet_Nuget_Proxy/index.json\ndotnet sitecore init \ndotnet sitecore login --authority ${bamboo.T2_QA_serialization_authority} --cm ${bamboo.T2_QA_serialization_cm} --allow-write true --client-credentials true --client-id ${bamboo.T2_QA_serialization_clientid} --client-secret ${bamboo.T2_QA_serialization_secret}\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Push=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet sitecore ser push \ndotnet sitecore ser validate --fix\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Publish=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet sitecore publish \nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\"\n"
        psLoadProfile: DEFAULT
        psBitness: ANY
        psSubdirectory: Sitecore
      description: Serialization
  - command:
      executable: Ansible_Playbook
      argument: devops/Ansible/init_deploy.yml  --limit=${bamboo.T2_QA_Server}, -i devops/Ansible/inventory --extra-vars "ansible_password=${bamboo.ansible_password}" --extra-vars "tower_token=${bamboo.AnsibleAPITokenSecret}"
      environment: bamboo_deploy_env=${bamboo.T2_QA_Deploy_Env}
      description: Ansible Deploy script
  final-tasks:
  - command:
      executable: Python_3
      argument: ${bamboo.capability.WorkPath}/tower/tower_launch.py --template devops-bamboo_trigger_plan --url ${bamboo.tower_url}
      environment: TOWER_PAYLOAD=${bamboo.tower_api_payload} TOWER_API_TOKEN=${bamboo.AnsibleAPITokenSecret}
      description: Launch metrics plan via Tower
  requirements:
  - OS: Linux
  artifact-subscriptions:
  - artifact: Sitecore Code Nuget
    destination: deploy
  - artifact: Sitecore Storybook nuget
    destination: deploy
Deploy to UAT CM:
  key: UAT
  tasks:
  - clean
  - command:
      executable: Python_3
      argument: ${bamboo.capability.WorkPath}/audits/bamboo_validate_user.py  --username ${bamboo.ad_auth_name} --userpassword "${bamboo.ad_auth_password}" --aduser ${bamboo.ManualBuildTriggerReason.userName} --adgroup ${bamboo.ad_deploy_check_group}
      description: Validate User has access to deploy
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          equals:
            bamboo.inject.stop_deploy: 'true'
      description: Stop build based on pre-flight script
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          matches:
            planRepository.branchName: ^release.*$
      description: Stop deploy if branch is release*
  - any-task:
      plugin-key: com.atlassian.bamboo.plugins.bamboo-variable-inject-plugin:dump
      configuration: {}
  - any-task:
      plugin-key: com.stellarity.bamboo.powershell-task:powerShellTask
      configuration:
        psLocation: BODY
        psBody: "write-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\"\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Serialization=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\"\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Restore=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet tool restore\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-new-tool=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet new tool-manifest\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Install & Login=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet nuget list source \ndotnet tool install Sitecore.CLI --add-source https://nexus.medpro.com/nexus/repository/Sitecore_MyGet_Nuget_Proxy/index.json\ndotnet sitecore init \ndotnet sitecore login --authority ${bamboo.T2_UAT_CM_serialization_authority} --cm ${bamboo.T2_UAT_CM_serialization_cm} --allow-write true --client-credentials true --client-id ${bamboo.T2_UAT_CM_serialization_clientid} --client-secret ${bamboo.T2_UAT_CM_serialization_secret}\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Push=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet sitecore ser push \ndotnet sitecore ser validate --fix\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Publish=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet sitecore publish \nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\"\n"
        psLoadProfile: DEFAULT
        psBitness: ANY
        psSubdirectory: Sitecore
      description: Serialization
  - command:
      executable: Ansible_Playbook
      argument: devops/Ansible/init_deploy.yml  --limit=${bamboo.T2_UAT_CM_Server}, -i devops/Ansible/inventory --extra-vars "ansible_password=${bamboo.ansible_password}" --extra-vars "tower_token=${bamboo.AnsibleAPITokenSecret}"
      environment: bamboo_deploy_env=${bamboo.T2_UAT_CM_Deploy_Env}
      description: Ansible Deploy script
  final-tasks:
  - command:
      executable: Python_3
      argument: ${bamboo.capability.WorkPath}/tower/tower_launch.py --template devops-bamboo_trigger_plan --url ${bamboo.tower_url}
      environment: TOWER_PAYLOAD=${bamboo.tower_api_payload} TOWER_API_TOKEN=${bamboo.AnsibleAPITokenSecret}
      description: Launch metrics plan via Tower
  requirements:
  - OS: Linux
  artifact-subscriptions:
  - artifact: Sitecore Code Nuget
    destination: deploy
  - artifact: Sitecore Storybook nuget
    destination: deploy
Deploy to UAT CD1:
  key: CD1
  tasks:
  - clean
  - command:
      executable: Python_3
      argument: ${bamboo.capability.WorkPath}/audits/bamboo_validate_user.py  --username ${bamboo.ad_auth_name} --userpassword "${bamboo.ad_auth_password}" --aduser ${bamboo.ManualBuildTriggerReason.userName} --adgroup ${bamboo.ad_deploy_check_group}
      description: Validate User has access to deploy
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          equals:
            bamboo.inject.stop_deploy: 'true'
      description: Stop build based on pre-flight script
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          matches:
            planRepository.branchName: ^release.*$
      description: Stop deploy if branch is release*
  - any-task:
      plugin-key: com.atlassian.bamboo.plugins.bamboo-variable-inject-plugin:dump
      configuration: {}
  - command:
      executable: Ansible_Playbook
      argument: devops/Ansible/init_deploy.yml  --limit=${bamboo.T2_UAT_CD_1_Server}, -i devops/Ansible/inventory --extra-vars "ansible_password=${bamboo.ansible_password}" --extra-vars "tower_token=${bamboo.AnsibleAPITokenSecret}"
      environment: bamboo_deploy_env=${bamboo.T2_UAT_CD1_Deploy_Env}
      description: Ansible Deploy script
  final-tasks:
  - command:
      executable: Python_3
      argument: ${bamboo.capability.WorkPath}/tower/tower_launch.py --template devops-bamboo_trigger_plan --url ${bamboo.tower_url}
      environment: TOWER_PAYLOAD=${bamboo.tower_api_payload} TOWER_API_TOKEN=${bamboo.AnsibleAPITokenSecret}
      description: Launch metrics plan via Tower
  requirements:
  - OS: Linux
  artifact-subscriptions:
  - artifact: Sitecore Code Nuget
    destination: deploy
  - artifact: Sitecore Storybook nuget
    destination: deploy
Deploy to UAT CD2:
  key: CD2
  tasks:
  - clean
  - command:
      executable: Python_3
      argument: ${bamboo.capability.WorkPath}/audits/bamboo_validate_user.py  --username ${bamboo.ad_auth_name} --userpassword "${bamboo.ad_auth_password}" --aduser ${bamboo.ManualBuildTriggerReason.userName} --adgroup ${bamboo.ad_deploy_check_group}
      description: Validate User has access to deploy
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          equals:
            bamboo.inject.stop_deploy: 'true'
      description: Stop build based on pre-flight script
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          matches:
            planRepository.branchName: ^release.*$
      description: Stop deploy if branch is release*
  - any-task:
      plugin-key: com.atlassian.bamboo.plugins.bamboo-variable-inject-plugin:dump
      configuration: {}
  - command:
      executable: Ansible_Playbook
      argument: devops/Ansible/init_deploy.yml  --limit=${bamboo.T2_UAT_CD_2_Server}, -i devops/Ansible/inventory --extra-vars "ansible_password=${bamboo.ansible_password}" --extra-vars "tower_token=${bamboo.AnsibleAPITokenSecret}"
      environment: bamboo_deploy_env=${bamboo.T2_UAT_CD2_Deploy_Env}
      description: Ansible Deploy script
  final-tasks:
  - command:
      executable: Python_3
      argument: ${bamboo.capability.WorkPath}/tower/tower_launch.py --template devops-bamboo_trigger_plan --url ${bamboo.tower_url}
      environment: TOWER_PAYLOAD=${bamboo.tower_api_payload} TOWER_API_TOKEN=${bamboo.AnsibleAPITokenSecret}
      description: Launch metrics plan via Tower
  requirements:
  - OS: Linux
  artifact-subscriptions:
  - artifact: Sitecore Code Nuget
    destination: deploy
  - artifact: Sitecore Storybook nuget
    destination: deploy
Deploy to CM:
  key: DCM
  tasks:
  - clean
  - command:
      executable: Python_3
      argument: ${bamboo.capability.WorkPath}/audits/bamboo_validate_user.py  --username ${bamboo.ad_auth_name} --userpassword "${bamboo.ad_auth_password}" --aduser ${bamboo.ManualBuildTriggerReason.userName} --adgroup ${bamboo.ad_deploy_check_group}
      description: Validate User has access to deploy
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          equals:
            bamboo.inject.stop_deploy: 'true'
      description: Stop build based on pre-flight script
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          matches:
            planRepository.branchName: ^((?!release).)*$
      description: Only allow Release branches to production
  - any-task:
      plugin-key: com.atlassian.bamboo.plugins.bamboo-variable-inject-plugin:dump
      configuration: {}
  - any-task:
      plugin-key: com.stellarity.bamboo.powershell-task:powerShellTask
      configuration:
        psLocation: BODY
        psBody: "write-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\"\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Serialization=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\"\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Restore=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet tool restore\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-new-tool=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet new tool-manifest\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Install & Login=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet nuget list source \ndotnet tool install Sitecore.CLI --add-source https://nexus.medpro.com/nexus/repository/Sitecore_MyGet_Nuget_Proxy/index.json\ndotnet sitecore init \ndotnet sitecore login --authority ${bamboo.PROD_CM_serialization_authority} --cm ${bamboo.PROD_CM_serialization_cm} --allow-write true --client-credentials true --client-id ${bamboo.PROD_CM_serialization_clientid} --client-secret ${bamboo.PROD_CM_serialization_secret}\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Push=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet sitecore ser push \ndotnet sitecore ser validate --fix\nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-Publish=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"\ndotnet sitecore publish \nwrite-host \"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\"\n"
        psLoadProfile: DEFAULT
        psBitness: ANY
        psSubdirectory: Sitecore
      description: Serialization
  - command:
      executable: Ansible_Playbook
      argument: devops/Ansible/init_deploy.yml  --limit=${bamboo.PROD_CM_Server}, -i devops/Ansible/inventory --extra-vars "ansible_password=${bamboo.ansible_password}" --extra-vars "tower_token=${bamboo.AnsibleAPITokenSecret}"
      environment: bamboo_deploy_env=${bamboo.PROD_CM_Deploy_Env}
      description: Ansible Deploy script
  requirements:
  - OS: Linux
  artifact-subscriptions:
  - artifact: Sitecore Code Nuget
    destination: deploy
  - artifact: Sitecore Storybook nuget
    destination: deploy
Deploy to CD1:
  key: DC1
  tasks:
  - clean
  - command:
      executable: Python_3
      argument: ${bamboo.capability.WorkPath}/audits/bamboo_validate_user.py  --username ${bamboo.ad_auth_name} --userpassword "${bamboo.ad_auth_password}" --aduser ${bamboo.ManualBuildTriggerReason.userName} --adgroup ${bamboo.ad_deploy_check_group}
      description: Validate User has access to deploy
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          equals:
            bamboo.inject.stop_deploy: 'true'
      description: Stop build based on pre-flight script
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          matches:
            planRepository.branchName: ^((?!release).)*$
      description: Only allow Release branches to production
  - any-task:
      plugin-key: com.atlassian.bamboo.plugins.bamboo-variable-inject-plugin:dump
      configuration: {}
  - command:
      executable: Ansible_Playbook
      argument: devops/Ansible/init_deploy.yml  --limit=${bamboo.PROD_CD_1_Server}, -i devops/Ansible/inventory --extra-vars "ansible_password=${bamboo.ansible_password}" --extra-vars "tower_token=${bamboo.AnsibleAPITokenSecret}"
      environment: bamboo_deploy_env=${bamboo.PROD_CD1_Deploy_Env}
      description: Ansible Deploy script
  requirements:
  - OS: Linux
  artifact-subscriptions:
  - artifact: Sitecore Code Nuget
    destination: deploy
  - artifact: Sitecore Storybook nuget
    destination: deploy
Deploy to CD2:
  key: DC2
  tasks:
  - clean
  - command:
      executable: Python_3
      argument: ${bamboo.capability.WorkPath}/audits/bamboo_validate_user.py  --username ${bamboo.ad_auth_name} --userpassword "${bamboo.ad_auth_password}" --aduser ${bamboo.ManualBuildTriggerReason.userName} --adgroup ${bamboo.ad_deploy_check_group}
      description: Validate User has access to deploy
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          equals:
            bamboo.inject.stop_deploy: 'true'
      description: Stop build based on pre-flight script
  - stop-job:
      success: 'true'
      conditions:
      - variable:
          matches:
            planRepository.branchName: ^((?!release).)*$
      description: Only allow Release branches to production
  - any-task:
      plugin-key: com.atlassian.bamboo.plugins.bamboo-variable-inject-plugin:dump
      configuration: {}
  - command:
      executable: Ansible_Playbook
      argument: devops/Ansible/init_deploy.yml  --limit=${bamboo.PROD_CD_2_Server}, -i devops/Ansible/inventory --extra-vars "ansible_password=${bamboo.ansible_password}" --extra-vars "tower_token=${bamboo.AnsibleAPITokenSecret}"
      environment: bamboo_deploy_env=${bamboo.PROD_CD2_Deploy_Env}
      description: Ansible Deploy script
  final-tasks:
  - command:
      executable: Python_3
      argument: ${bamboo.capability.WorkPath}/tower/tower_launch.py --template devops-bamboo_trigger_plan --url ${bamboo.tower_url}
      environment: TOWER_PAYLOAD=${bamboo.tower_api_payload} TOWER_API_TOKEN=${bamboo.AnsibleAPITokenSecret}
      description: Launch metrics plan via Tower
  requirements:
  - OS: Linux
  artifact-subscriptions:
  - artifact: Sitecore Code Nuget
    destination: deploy
  - artifact: Sitecore Storybook nuget
    destination: deploy
repositories:
- yaml:
    scope: global
triggers: []
branches:
  create: manually
  delete: never
  link-to-jira: true
notifications: []
labels: []
dependencies:
  require-all-stages-passing: false
  enabled-for-branches: true
  block-strategy: none
  plans: []
other:
  concurrent-build-plugin: system-default
  force-stop-build: true
---
version: 2
plan:
  key: STC-STC2
plan-permissions: []
...
